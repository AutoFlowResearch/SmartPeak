#!/usr/bin/env python
import os, sys
import smartpeak.utils as utils


def main(argc, argv):
    latest = utils.get_latest_commit_message()
    type, value = utils.is_release_command_present(latest)
    if type and value:
        set_version = value if type == 'set' else 'None'
        bump = value if type == 'bump' else 'patch'

        # Read current version:
        config_file = os.path.join(utils.get_project_path(), 'CMakeLists.txt')
        major, minor, patch = utils.get_version(config_file)

        # Retrieve new version:
        success, (n_major, n_minor, n_patch) = utils.get_new_version(
            set_version, bump, (major, minor, patch))
        if not success:
            return 1
      
        # Update config:
        success = utils.update_version(config_file, version=(n_major, n_minor, n_patch))
        if not success:
            return 1
    # return success if command is not present
    return 0


if __name__ == '__main__':
    sys.exit(main(len(sys.argv), sys.argv))
